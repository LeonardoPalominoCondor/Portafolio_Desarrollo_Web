<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reloj Analógico</title>
    <style>
        canvas {
            display: block;
            margin: 0 auto;
            background: radial-gradient(circle, #f0f0f0, #ccc);
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
        }
        h1 {
            text-align: center;
            font-size: 24px;
            margin-top: 20px;
            font-family: 'Montserrat', sans-serif;
    }
      </style>
      <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300&display=swap" rel="stylesheet">
</head>
<body>
    <h1>Reloj Analógico</h1>
    <canvas id="relojCanvas" width="400" height="400"></canvas>
    <script>
      function drawClock() {
        const canvas = document.getElementById("relojCanvas");
        const ctx = canvas.getContext("2d");
  
        ctx.clearRect(0, 0, canvas.width, canvas.height);
  
        const now = new Date();
        const hora = now.getHours();
        const minutos = now.getMinutes();
        const segundos = now.getSeconds();
  
        const segundoAngulo = (segundos / 60) * 360;
        const minutoAngulo = ((minutos + segundos / 60) / 60) * 360;
        const horaAngulo = ((hora % 12 + minutos / 60) / 12) * 360;
  
        ctx.beginPath();
        ctx.arc(canvas.width / 2, canvas.height / 2, 150, 0, Math.PI * 2);
        ctx.lineWidth = 10;
        ctx.strokeStyle = "black";
        ctx.stroke();
  
        for (let i = 1; i <= 12; i++) {
        const angulo = ((i - 3) * 30 * Math.PI) / 180;
        const x = canvas.width / 2 + Math.cos(angulo) * 120;
        const y = canvas.height / 2 + Math.sin(angulo) * 120;

        ctx.font = "24px Arial";
        ctx.fillStyle = "black";
        ctx.textAlign = "center";
        ctx.textBaseline = "middle";
        ctx.fillText(i.toString(), x, y);

        for (let j = 1; j <= 4; j++) {
          const minuteLineAngle = ((i - 3) * 30 + j * 6) * (Math.PI / 180);
          const startX = canvas.width / 2 + Math.cos(minuteLineAngle) * 135;
          const startY = canvas.height / 2 + Math.sin(minuteLineAngle) * 135;
          const endX = canvas.width / 2 + Math.cos(minuteLineAngle) * 140;
          const endY = canvas.height / 2 + Math.sin(minuteLineAngle) * 140;

          ctx.beginPath();
          ctx.moveTo(startX, startY);
          ctx.lineTo(endX, endY);
          ctx.lineWidth = 2;
          ctx.strokeStyle = "black";
          ctx.stroke();
        }
      }


        ctx.save();
        ctx.translate(canvas.width / 2, canvas.height / 2);
        ctx.rotate((Math.PI / 180) * horaAngulo);
        ctx.beginPath();
        ctx.moveTo(0, 0);
        ctx.lineTo(0, -80);
        ctx.lineWidth = 8;
        ctx.strokeStyle = "blue";
        ctx.stroke();
        ctx.restore();
  
  
        ctx.save();
        ctx.translate(canvas.width / 2, canvas.height / 2);
        ctx.rotate((Math.PI / 180) * minutoAngulo);
        ctx.beginPath();
        ctx.moveTo(0, 0);
        ctx.lineTo(0, -110);
        ctx.lineWidth = 6;
        ctx.strokeStyle = "#3498db";
        ctx.stroke();
        ctx.restore();
  

        ctx.save();
        ctx.translate(canvas.width / 2, canvas.height / 2);
        ctx.rotate((Math.PI / 180) * segundoAngulo);
        ctx.beginPath();
        ctx.moveTo(0, 0);
        ctx.lineTo(0, -120);
        ctx.lineWidth = 2;
        ctx.strokeStyle = "red";
        ctx.stroke();
        ctx.restore();
      }
  
      
      setInterval(drawClock, 1000);
  
      drawClock();
    </script>
  </body>
</html>
